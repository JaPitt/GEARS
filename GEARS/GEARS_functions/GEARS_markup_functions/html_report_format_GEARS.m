%% GEARS results summary
% A summary of the results found during the GEARS procedure. This report was generated by the GEARS toolbox.


%% Global parameter estimation
% The results of the global parameter estimation procedure, both for the complete GEARS analysis and the intermediate estimation. 

function [] = html_report_format_GEARS(alpha, Markup_tag, Reg_param_summary, Non_reg_param_summary, Parameter_bounds_reduced, Parameter_bounds_original, Sample_table, Figures_to_include, Fitting_NRMSE_table, Validation_NRMSE_table, Fitting_R2_table, Validation_R2_table, Fitting_chi2_table, Validation_chi2_table)
% This function will be called by the "Write_GEARS_results_html_summary" function with all the correct inputs. This function provides no functionality alone.
% See below the function for copyright and license infomation. 

Line_spaces = @(x) fprintf(repmat('\n', [1, x])); % x line breaks

disp(Markup_tag)

Line_spaces(1)

Figures_to_include_red = cell(size(Figures_to_include));

    for i = 1:length(Figures_to_include)

    [~, Figures_to_include_red{i}] = fileparts(Figures_to_include{i});

    end

    if ~isempty(alpha)

    display(Reg_param_summary, ['Regularised parameter estimation results (alpha = ' num2str(alpha) ')'])

    Line_spaces(2)

    end

display(Non_reg_param_summary, 'Non-regularised parameter estimation results')

Ins = who;

Line_spaces(5)

To_plot_here ={'Regularised_fit_with_uncertainty', 'Regularised_validation_with_uncertainty', 'Fitting_figures', ...
'Validation_figures', 'Non_regularised_fit_with_uncertainty', 'Non_regularised_validation_with_uncertainty'};

To_plot_here = To_plot_here(ismember(To_plot_here, Figures_to_include_red));

Handles = [];

    for i = 1:length(To_plot_here)       

    Handle = openfig(char(Figures_to_include(ismember(Figures_to_include_red, To_plot_here(i)))), 'visible');

    Handles = [Handles Handle];

        for j = 1:length(Handle)

        Subhandle = Handle(j);

        set(0, 'CurrentFigure', Subhandle)

        ann1 = annotation('textbox', [0 0.95 1 .05], 'String', {strrep(To_plot_here{i}, '_', '\_')}, 'Linestyle', 'none', 'HorizontalAlignment', 'center');

        ann1.FontSize = 16;

        ann1.FontWeight = 'bold';

        end

        if i == 4

        snapnow

        close(Handles)

        Handles = [];

        end

    end

    if ~isempty(Handles)

    snapnow

    close(Handles)

    end


%% Statistics 
% The results of the statisical analyses performed within GEARS.

    if sum(ismember({'Fitting_NRMSE_table', 'Validation_NRMSE_table', 'Fitting_R2_table', 'Validation_R2_table', 'Fitting_chi2_table', 'Validation_chi2_table'}, Ins)) ~= 0
    
    disp(Markup_tag) 
                   
    else 
        
    disp('No statistics where calulated.')  
        
    end

    if ismember('Fitting_NRMSE_table', Ins)
    
    Line_spaces(2)
    
    display(Fitting_NRMSE_table, 'NRMSEs for the fitting')    
        
    end
    
    if ismember('Validation_NRMSE_table', Ins)

        if ~isempty('Validation_NRMSE_table')
    
        Line_spaces(2)

        display(Validation_NRMSE_table, 'NRMSEs for the cross validation')    
    
        end

    end
    
    if ismember('Fitting_R2_table', Ins)
    
    Line_spaces(2)

    display(Fitting_R2_table, 'R2s for the fitting procedure')  
        
    end
    
    if ismember('Validation_R2_table', Ins)
    
        if ~isempty('Validation_R2_table')

        Line_spaces(2)
    
        display(Validation_R2_table, 'R2s_for_the_cross_validation')
        
        end
        
    end    

    if ismember('Fitting_chi2_table', Ins)

        if ~isempty('Fitting_chi2_table')
            
        Line_spaces(2)    
        
        display(Fitting_chi2_table, 'chi2s for the fitting procedure')  

        end
        
    end
    
    if ismember('Validation_chi2_table', Ins)

        if ~isempty('Validation_chi2_table')
    
        Line_spaces(2)

        display(Validation_chi2_table, 'chi2s_for_the_cross_validation')

        end
        
    end

    if sum(ismember({'Fitting_NRMSE_table', 'Validation_NRMSE_table', 'Fitting_R2_table', 'Validation_R2_table', 'Fitting_chi2_table', 'Validation_chi2_table'}, Ins)) ~= 0
    
    Line_spaces(5)    

    end


To_plot_here ={'Convergence_curves', 'Regularised_fitting_residuals', 'Regularised_validation_residuals', ...
'Regularised_fitting_pred_vs_meas', 'Regularised_validation_pred_vs_meas', 'Regularised_fitting_corr_matrix', ...
'Non_regularised_fitting_residuals', 'Non_regularised_validation_residuals', 'Non_regularised_fitting_pred_vs_meas', ...
'Non_regularised_validation_pred_vs_meas', 'Non_regularised_fitting_corr_matrix'};

To_plot_here = To_plot_here(ismember(To_plot_here, Figures_to_include_red));

Handles = [];

    for i = 1:length(To_plot_here)

    Handle = openfig(char(Figures_to_include(ismember(Figures_to_include_red, To_plot_here(i)))));

    Handles = [Handles Handle];

        for j = 1:length(Handle)

        Subhandle = Handle(j);

        set(0, 'CurrentFigure', Subhandle)

        ann1 = annotation('textbox', [0 0.95 1 .05], 'String', {strrep(To_plot_here{i}, '_', '\_')}, 'Linestyle', 'none', 'HorizontalAlignment', 'center');

        ann1.FontSize = 16;

        ann1.FontWeight = 'bold';

        end

        if i == 5

        snapnow

        close(Handles)

        Handles = [];

        end

    end

    if ~isempty(Handles)

    snapnow

    close(Handles)

    end


%% Parameter bounding
% The results of the parameter bounding techniques applied within GEARS.
   
    if ~isempty(Parameter_bounds_reduced)

    disp(Markup_tag)

    Line_spaces(2)

        if ~isempty(Parameter_bounds_reduced)

        display(Parameter_bounds_reduced, 'Reduced_parameter_bounds')

        end

    Line_spaces(2)

        if ~isempty(Parameter_bounds_original)

        display(Parameter_bounds_original, 'Original_parameter_bounds')

        end

    Line_spaces(5)

    else

    display('Parameter bounding was not performed')

    end

To_plot_here ={'Bounds_param_confidence_plot'};

To_plot_here = To_plot_here(ismember(To_plot_here, Figures_to_include_red));

Handles = [];

    for i = 1:length(To_plot_here)

    Handle = openfig(char(Figures_to_include(ismember(Figures_to_include_red, To_plot_here(i)))));

    Handles = [Handles Handle];

        for j = 1:length(Handle)

        Subhandle = Handle(j);

        set(0, 'CurrentFigure', Subhandle)

        ann1 = annotation('textbox', [0 0.95 1 .05], 'String', {strrep(To_plot_here{i}, '_', '\_')}, 'Linestyle', 'none', 'HorizontalAlignment', 'center');

        ann1.FontSize = 16;

        ann1.FontWeight = 'bold';

        end

    end

    if ~isempty(Handles)

    snapnow

    close(Handles)

    end


%% Parameter sampling
% The results of the parameter sampling performing within GEARS's exploratory estimation phase.
    
    if ~isempty(Sample_table)
    
    disp(Markup_tag)

    Line_spaces(2)   

    display(Sample_table, 'Parameter sampling results')

    else

    display('Parameter sampling was not performed')
    
    end

To_plot_here ={'Sample_plot'};

To_plot_here = To_plot_here(ismember(To_plot_here, Figures_to_include_red));

Handles = [];

    for i = 1:length(To_plot_here)

    Handle = openfig(char(Figures_to_include(ismember(Figures_to_include_red, To_plot_here(i)))));

    Handles = [Handles Handle];

        for j = 1:length(Handle)

        Subhandle = Handle(j);

        set(0, 'CurrentFigure', Subhandle)

        ann1 = annotation('textbox', [0 0.95 1 .05], 'String', {strrep(To_plot_here{i}, '_', '\_')}, 'Linestyle', 'none', 'HorizontalAlignment', 'center');

        ann1.FontSize = 16;

        ann1.FontWeight = 'bold';

        end

    end

    if ~isempty(Handles)

    snapnow

    close(Handles)

    end

end

% Copyright 2018 Jake Alan Pitt and Julio R. Banga
 
% This file is part of GEARS.
 
% GEARS is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
 
% GEARS is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
 
% You should have received a copy of the GNU General Public License
% along with GEARS.  If not, see <http://www.gnu.org/licenses/>.
 
% File author: Jake Alan Pitt (jp00191.su@gmail.com)

